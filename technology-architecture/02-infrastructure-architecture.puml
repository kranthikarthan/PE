@startuml INFRASTRUCTURE_ARCHITECTURE
!theme plain
title ISO 20022 Payment Engine - Infrastructure Architecture

package "Load Balancer & Gateway" {
    [Spring Cloud Gateway] as SCG
    [SSL/TLS Termination] as SSL
    [Rate Limiting] as RL
    [Circuit Breaker] as CB
}

package "Application Services" {
    node "Service Instance 1" {
        [Gateway Service] as GS1
        [Auth Service] as AS1
        [Config Service] as CS1
        [Middleware Service] as MS1
        [Discovery Service] as DS1
    }
    
    node "Service Instance 2" {
        [Gateway Service] as GS2
        [Auth Service] as AS2
        [Config Service] as CS2
        [Middleware Service] as MS2
        [Discovery Service] as DS2
    }
    
    node "Service Instance 3" {
        [Gateway Service] as GS3
        [Auth Service] as AS3
        [Config Service] as CS3
        [Middleware Service] as MS3
        [Discovery Service] as DS3
    }
}

package "Service Discovery" {
    [Eureka Server] as ES
    [Service Registry] as SR
    [Load Balancer] as LB
    [Health Checks] as HC
    [Service Discovery Client] as SDC
}

package "Data Layer" {
    package "PostgreSQL Database" {
        [PostgreSQL Primary] as PGP
        [Connection Pool] as CP
        [HikariCP] as HCP
    }
    
    package "Redis Cache" {
        [Redis Instance] as RI
        [Redis Cache Manager] as RCM
    }
    
    package "Kafka Messaging" {
        [Kafka Broker] as KB
        [Kafka Producer] as KP
        [Kafka Consumer] as KC
        [Dead Letter Queue] as DLQ
    }
}

package "Monitoring & Observability" {
    package "Metrics & Monitoring" {
        [Spring Boot Actuator] as SBA
        [Micrometer] as Micrometer
        [Custom Metrics] as CM
        [Health Checks] as HC2
    }
    
    package "Logging" {
        [Structured Logging] as SL
        [JSON Logging] as JL
        [Audit Logging] as AL
        [Log Aggregation] as LA
    }
    
    package "Tracing" {
        [Distributed Tracing] as DT
        [Trace Context] as TC
        [Span Management] as SM
        [Trace Analytics] as TA
    }
}

package "Security & Compliance" {
    [OAuth2 Server] as OAuth2S
    [JWT Token Management] as JWT
    [AES Encryption] as AES
    [RSA Digital Signatures] as RSA
    [Spring Security] as SS
    [Audit Logging] as AL2
}

package "CI/CD Pipeline" {
    [Azure DevOps] as AD
    [Maven Build] as MB
    [Docker Build] as DB
    [SonarQube] as SQ
    [Trivy Scanner] as TS
}

package "External Services" {
    [Clearing Systems] as CS
    [SMTP Server] as SMTP
    [SMS Gateway] as SMS
    [Webhook Endpoints] as WE
    [Third Party APIs] as TPA
}

' Load balancer connections
SCG --> SSL : "SSL Termination"
SCG --> RL : "Rate Limiting"
SCG --> CB : "Circuit Breaker"

' Application services connections
SCG --> GS1 : "Route Requests"
SCG --> GS2 : "Route Requests"
SCG --> GS3 : "Route Requests"

GS1 --> AS1 : "Authentication"
GS1 --> CS1 : "Configuration"
GS1 --> MS1 : "Business Logic"
GS1 --> DS1 : "Service Discovery"

GS2 --> AS2 : "Authentication"
GS2 --> CS2 : "Configuration"
GS2 --> MS2 : "Business Logic"
GS2 --> DS2 : "Service Discovery"

GS3 --> AS3 : "Authentication"
GS3 --> CS3 : "Configuration"
GS3 --> MS3 : "Business Logic"
GS3 --> DS3 : "Service Discovery"

' Service discovery connections
ES --> SR : "Service Registry"
SR --> LB : "Load Balancing"
LB --> HC : "Health Checks"
HC --> SDC : "Service Discovery Client"

DS1 --> ES : "Service Registration"
DS2 --> ES : "Service Registration"
DS3 --> ES : "Service Registration"

' Data layer connections
MS1 --> CP : "Database Connection"
MS2 --> CP : "Database Connection"
MS3 --> CP : "Database Connection"
CP --> PGP : "Primary Database"
CP --> HCP : "Connection Pooling"

MS1 --> RI : "Cache Operations"
MS2 --> RI : "Cache Operations"
MS3 --> RI : "Cache Operations"
RI --> RCM : "Cache Management"

MS1 --> KB : "Message Production"
MS2 --> KB : "Message Production"
MS3 --> KB : "Message Production"
KB --> KP : "Message Producer"
KB --> KC : "Message Consumer"
KB --> DLQ : "Error Handling"

' Monitoring connections
MS1 --> SBA : "Health Metrics"
MS2 --> SBA : "Health Metrics"
MS3 --> SBA : "Health Metrics"
SBA --> Micrometer : "Metrics Collection"
Micrometer --> CM : "Custom Metrics"
SBA --> HC2 : "Health Checks"

MS1 --> SL : "Structured Logging"
MS2 --> SL : "Structured Logging"
MS3 --> SL : "Structured Logging"
SL --> JL : "JSON Logging"
SL --> AL : "Audit Logging"
SL --> LA : "Log Aggregation"

MS1 --> DT : "Distributed Tracing"
MS2 --> DT : "Distributed Tracing"
MS3 --> DT : "Distributed Tracing"
DT --> TC : "Trace Context"
DT --> SM : "Span Management"
DT --> TA : "Trace Analytics"

' Security connections
GS1 --> OAuth2S : "Token Validation"
GS2 --> OAuth2S : "Token Validation"
GS3 --> OAuth2S : "Token Validation"
OAuth2S --> JWT : "Token Management"
OAuth2S --> AES : "Message Encryption"
OAuth2S --> RSA : "Digital Signatures"
OAuth2S --> SS : "Spring Security"
OAuth2S --> AL2 : "Audit Logging"

' CI/CD connections
AD --> MB : "Build Process"
MB --> DB : "Build Images"
DB --> SQ : "Code Quality"
DB --> TS : "Security Scan"
AD --> APIServer : "Deploy Services"

' External service connections
GS1 --> CS : "Clearing System APIs"
GS2 --> CS : "Clearing System APIs"
GS3 --> CS : "Clearing System APIs"
GS1 --> SMTP : "Email Notifications"
GS1 --> SMS : "SMS Notifications"
GS1 --> WE : "Webhook Delivery"
GS1 --> TPA : "Third Party APIs"

note right of GS1
API Gateway Features:
- Spring Cloud Gateway
- Rate limiting with Redis
- Circuit breaker with Resilience4j
- OAuth2/JWT authentication
- CORS handling
end note

note right of APIServer
Kubernetes Control Plane:
- API Server for cluster management
- etcd for state storage
- Scheduler for pod placement
- Controller Manager for automation
end note

note right of ICP
Istio Service Mesh:
- Service discovery and load balancing
- Traffic management and routing
- Security policies and mTLS
- Observability and monitoring
end note

note right of PGP
PostgreSQL Database:
- Primary-replica architecture
- Streaming replication
- Connection pooling with HikariCP
- Flyway migrations
end note

note right of RM1
Redis Cache:
- Master-replica architecture
- Sentinel for high availability
- Caching and session storage
- Rate limiting support
end note

note right of KB1
Kafka Message Queue:
- Multi-broker cluster
- Zookeeper coordination
- Schema registry
- High throughput
- Durability and replication
end note

note right of SBA
Monitoring & Observability:
- Spring Boot Actuator
- Micrometer metrics
- Custom metrics
- Health checks
- Audit logging
end note

note right of OAuth2S
Security Stack:
- OAuth2/JWT authentication
- Spring Security
- Message encryption (AES)
- Digital signatures (RSA)
- Audit logging
end note

note right of AD
CI/CD Pipeline:
- Azure DevOps for automation
- Maven for building
- Docker for containerization
- SonarQube for code quality
- Trivy for security scanning
end note

@enduml