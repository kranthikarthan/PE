@startuml SECURITY_AUDIT_ERD
!theme plain
title Security & Audit Entities ERD

entity "users" {
  * id : UUID <<PK>>
  --
  * username : VARCHAR(100) <<UK>>
  * email : VARCHAR(255) <<UK>>
  * password_hash : VARCHAR(255)
  * first_name : VARCHAR(100)
  * last_name : VARCHAR(100)
  * status : VARCHAR(20)
  * last_login_at : TIMESTAMP
  * password_changed_at : TIMESTAMP
  * failed_login_attempts : INTEGER
  * locked_until : TIMESTAMP
  * created_at : TIMESTAMP
  * updated_at : TIMESTAMP
  * created_by : VARCHAR(100)
  * updated_by : VARCHAR(100)
}

entity "user_roles" {
  * id : UUID <<PK>>
  --
  * user_id : UUID <<FK>>
  * role_name : VARCHAR(50)
  * tenant_id : UUID <<FK>>
  * is_active : BOOLEAN
  * granted_at : TIMESTAMP
  * granted_by : VARCHAR(100)
  * expires_at : TIMESTAMP
  * created_at : TIMESTAMP
  * updated_at : TIMESTAMP
}

entity "user_permissions" {
  * id : UUID <<PK>>
  --
  * user_id : UUID <<FK>>
  * permission_name : VARCHAR(100)
  * resource_type : VARCHAR(50)
  * resource_id : VARCHAR(100)
  * tenant_id : UUID <<FK>>
  * is_active : BOOLEAN
  * granted_at : TIMESTAMP
  * granted_by : VARCHAR(100)
  * expires_at : TIMESTAMP
  * created_at : TIMESTAMP
  * updated_at : TIMESTAMP
}

entity "oauth_clients" {
  * id : UUID <<PK>>
  --
  * client_id : VARCHAR(100) <<UK>>
  * client_secret_hash : VARCHAR(255)
  * client_name : VARCHAR(100)
  * description : TEXT
  * redirect_uris : TEXT
  * scopes : TEXT
  * grant_types : TEXT
  * access_token_validity : INTEGER
  * refresh_token_validity : INTEGER
  * is_active : BOOLEAN
  * created_at : TIMESTAMP
  * updated_at : TIMESTAMP
  * created_by : VARCHAR(100)
  * updated_by : VARCHAR(100)
}

entity "oauth_tokens" {
  * id : UUID <<PK>>
  --
  * client_id : VARCHAR(100) <<FK>>
  * user_id : UUID <<FK>>
  * token_type : VARCHAR(20)
  * access_token : TEXT
  * refresh_token : TEXT
  * scopes : TEXT
  * expires_at : TIMESTAMP
  * issued_at : TIMESTAMP
  * is_revoked : BOOLEAN
  * revoked_at : TIMESTAMP
  * revoked_reason : VARCHAR(255)
  * created_at : TIMESTAMP
  * updated_at : TIMESTAMP
}

entity "encryption_keys" {
  * id : UUID <<PK>>
  --
  * key_name : VARCHAR(100) <<UK>>
  * key_type : VARCHAR(20)
  * key_algorithm : VARCHAR(50)
  * key_size : INTEGER
  * key_data : TEXT
  * key_version : INTEGER
  * is_active : BOOLEAN
  * created_at : TIMESTAMP
  * updated_at : TIMESTAMP
  * expires_at : TIMESTAMP
  * created_by : VARCHAR(100)
  * updated_by : VARCHAR(100)
}

entity "digital_certificates" {
  * id : UUID <<PK>>
  --
  * certificate_name : VARCHAR(100) <<UK>>
  * certificate_type : VARCHAR(20)
  * certificate_data : TEXT
  * private_key : TEXT
  * public_key : TEXT
  * issuer : VARCHAR(255)
  * subject : VARCHAR(255)
  * serial_number : VARCHAR(100)
  * valid_from : TIMESTAMP
  * valid_to : TIMESTAMP
  * is_active : BOOLEAN
  * created_at : TIMESTAMP
  * updated_at : TIMESTAMP
  * created_by : VARCHAR(100)
  * updated_by : VARCHAR(100)
}

entity "audit_events" {
  * id : UUID <<PK>>
  --
  * event_id : VARCHAR(100) <<UK>>
  * event_type : VARCHAR(50)
  * event_action : VARCHAR(50)
  * user_id : VARCHAR(100)
  * tenant_id : UUID <<FK>>
  * resource_type : VARCHAR(50)
  * resource_id : VARCHAR(100)
  * event_status : VARCHAR(20)
  * event_details : TEXT
  * ip_address : VARCHAR(45)
  * user_agent : VARCHAR(500)
  * session_id : VARCHAR(100)
  * correlation_id : VARCHAR(100)
  * created_at : TIMESTAMP
}

entity "security_events" {
  * id : UUID <<PK>>
  --
  * event_type : VARCHAR(50)
  * severity : VARCHAR(20)
  * event_source : VARCHAR(100)
  * event_details : TEXT
  * user_id : VARCHAR(100)
  * ip_address : VARCHAR(45)
  * user_agent : VARCHAR(500)
  * risk_score : INTEGER
  * is_resolved : BOOLEAN
  * resolved_at : TIMESTAMP
  * resolved_by : VARCHAR(100)
  * resolution_notes : TEXT
  * created_at : TIMESTAMP
  * updated_at : TIMESTAMP
}

entity "rate_limit_violations" {
  * id : UUID <<PK>>
  --
  * user_id : VARCHAR(100)
  * client_id : VARCHAR(100)
  * ip_address : VARCHAR(45)
  * endpoint : VARCHAR(255)
  * violation_type : VARCHAR(50)
  * limit_value : INTEGER
  * actual_value : INTEGER
  * violation_time : TIMESTAMP
  * is_blocked : BOOLEAN
  * blocked_until : TIMESTAMP
  * created_at : TIMESTAMP
}

entity "failed_login_attempts" {
  * id : UUID <<PK>>
  --
  * username : VARCHAR(100)
  * ip_address : VARCHAR(45)
  * user_agent : VARCHAR(500)
  * failure_reason : VARCHAR(100)
  * attempt_count : INTEGER
  * is_locked : BOOLEAN
  * locked_until : TIMESTAMP
  * created_at : TIMESTAMP
}

' Relationships
users ||--o{ user_roles : "has"
users ||--o{ user_permissions : "has"
users ||--o{ oauth_tokens : "owns"
users ||--o{ audit_events : "performs"
users ||--o{ security_events : "triggers"
users ||--o{ rate_limit_violations : "violates"
users ||--o{ failed_login_attempts : "attempts"

oauth_clients ||--o{ oauth_tokens : "issues"

tenants ||--o{ user_roles : "scopes"
tenants ||--o{ user_permissions : "scopes"
tenants ||--o{ audit_events : "contains"

' Indexes and constraints
note right of users
Indexes:
- idx_users_username (username)
- idx_users_email (email)
- idx_users_status (status)
- idx_users_last_login_at (last_login_at)
- idx_users_created_at (created_at)

Constraints:
- UK_users_username (username)
- UK_users_email (email)
- CHK_users_status (status IN ('ACTIVE', 'INACTIVE', 'LOCKED', 'SUSPENDED'))
- CHK_users_failed_login_attempts (failed_login_attempts >= 0)
- CHK_users_password_hash (password_hash IS NOT NULL)
end note

note right of user_roles
Indexes:
- idx_user_roles_user_id (user_id)
- idx_user_roles_role_name (role_name)
- idx_user_roles_tenant_id (tenant_id)
- idx_user_roles_is_active (is_active)
- idx_user_roles_granted_at (granted_at)

Constraints:
- FK_user_roles_user_id (user_id)
- FK_user_roles_tenant_id (tenant_id)
- UK_user_roles_user_tenant_role (user_id, tenant_id, role_name)
- CHK_user_roles_is_active (is_active IN (true, false))
- CHK_user_roles_role_name (role_name IN ('ADMIN', 'USER', 'OPERATOR', 'AUDITOR', 'VIEWER'))
end note

note right of user_permissions
Indexes:
- idx_user_permissions_user_id (user_id)
- idx_user_permissions_permission_name (permission_name)
- idx_user_permissions_resource_type (resource_type)
- idx_user_permissions_resource_id (resource_id)
- idx_user_permissions_tenant_id (tenant_id)
- idx_user_permissions_is_active (is_active)

Constraints:
- FK_user_permissions_user_id (user_id)
- FK_user_permissions_tenant_id (tenant_id)
- UK_user_permissions_user_tenant_resource (user_id, tenant_id, resource_type, resource_id)
- CHK_user_permissions_is_active (is_active IN (true, false))
- CHK_user_permissions_permission_name (permission_name IN ('READ', 'WRITE', 'DELETE', 'EXECUTE', 'ADMIN'))
end note

note right of oauth_clients
Indexes:
- idx_oauth_clients_client_id (client_id)
- idx_oauth_clients_client_name (client_name)
- idx_oauth_clients_is_active (is_active)
- idx_oauth_clients_created_at (created_at)

Constraints:
- UK_oauth_clients_client_id (client_id)
- CHK_oauth_clients_is_active (is_active IN (true, false))
- CHK_oauth_clients_access_token_validity (access_token_validity > 0)
- CHK_oauth_clients_refresh_token_validity (refresh_token_validity > 0)
end note

note right of oauth_tokens
Indexes:
- idx_oauth_tokens_client_id (client_id)
- idx_oauth_tokens_user_id (user_id)
- idx_oauth_tokens_token_type (token_type)
- idx_oauth_tokens_expires_at (expires_at)
- idx_oauth_tokens_is_revoked (is_revoked)
- idx_oauth_tokens_issued_at (issued_at)

Constraints:
- FK_oauth_tokens_client_id (client_id)
- FK_oauth_tokens_user_id (user_id)
- CHK_oauth_tokens_token_type (token_type IN ('ACCESS', 'REFRESH'))
- CHK_oauth_tokens_is_revoked (is_revoked IN (true, false))
- CHK_oauth_tokens_expires_at (expires_at > issued_at)
end note

note right of encryption_keys
Indexes:
- idx_encryption_keys_key_name (key_name)
- idx_encryption_keys_key_type (key_type)
- idx_encryption_keys_key_algorithm (key_algorithm)
- idx_encryption_keys_is_active (is_active)
- idx_encryption_keys_created_at (created_at)

Constraints:
- UK_encryption_keys_key_name (key_name)
- CHK_encryption_keys_key_type (key_type IN ('AES', 'RSA', 'ECDSA', 'HMAC'))
- CHK_encryption_keys_key_algorithm (key_algorithm IN ('AES-256-GCM', 'RSA-2048', 'RSA-4096', 'ECDSA-P256', 'HMAC-SHA256'))
- CHK_encryption_keys_is_active (is_active IN (true, false))
- CHK_encryption_keys_key_size (key_size > 0)
end note

note right of digital_certificates
Indexes:
- idx_digital_certificates_certificate_name (certificate_name)
- idx_digital_certificates_certificate_type (certificate_type)
- idx_digital_certificates_issuer (issuer)
- idx_digital_certificates_subject (subject)
- idx_digital_certificates_is_active (is_active)
- idx_digital_certificates_valid_from (valid_from)
- idx_digital_certificates_valid_to (valid_to)

Constraints:
- UK_digital_certificates_certificate_name (certificate_name)
- CHK_digital_certificates_certificate_type (certificate_type IN ('SIGNING', 'ENCRYPTION', 'AUTHENTICATION'))
- CHK_digital_certificates_is_active (is_active IN (true, false))
- CHK_digital_certificates_valid_to (valid_to > valid_from)
end note

note right of audit_events
Indexes:
- idx_audit_events_event_id (event_id)
- idx_audit_events_event_type (event_type)
- idx_audit_events_event_action (event_action)
- idx_audit_events_user_id (user_id)
- idx_audit_events_tenant_id (tenant_id)
- idx_audit_events_resource_type (resource_type)
- idx_audit_events_resource_id (resource_id)
- idx_audit_events_event_status (event_status)
- idx_audit_events_created_at (created_at)

Constraints:
- UK_audit_events_event_id (event_id)
- FK_audit_events_tenant_id (tenant_id)
- CHK_audit_events_event_type (event_type IN ('AUTHENTICATION', 'AUTHORIZATION', 'MESSAGE_PROCESSING', 'CLEARING_SYSTEM', 'WEBHOOK_DELIVERY', 'KAFKA_MESSAGE', 'SECURITY', 'SYSTEM', 'CONFIGURATION'))
- CHK_audit_events_event_action (event_action IN ('CREATE', 'READ', 'UPDATE', 'DELETE', 'PROCESS', 'TRANSFORM', 'VALIDATE', 'ROUTE', 'DELIVER', 'RETRY', 'FAIL', 'LOGIN', 'LOGOUT', 'TOKEN_ISSUE', 'TOKEN_REVOKE'))
- CHK_audit_events_event_status (event_status IN ('SUCCESS', 'FAILURE', 'PENDING', 'RETRY'))
end note

note right of security_events
Indexes:
- idx_security_events_event_type (event_type)
- idx_security_events_severity (severity)
- idx_security_events_event_source (event_source)
- idx_security_events_user_id (user_id)
- idx_security_events_ip_address (ip_address)
- idx_security_events_risk_score (risk_score)
- idx_security_events_is_resolved (is_resolved)
- idx_security_events_created_at (created_at)

Constraints:
- CHK_security_events_event_type (event_type IN ('FAILED_LOGIN', 'RATE_LIMIT_EXCEEDED', 'UNAUTHORIZED_ACCESS', 'SUSPICIOUS_ACTIVITY', 'TOKEN_ABUSE', 'PRIVILEGE_ESCALATION', 'DATA_BREACH', 'MALWARE_DETECTED'))
- CHK_security_events_severity (severity IN ('LOW', 'MEDIUM', 'HIGH', 'CRITICAL'))
- CHK_security_events_risk_score (risk_score BETWEEN 0 AND 100)
- CHK_security_events_is_resolved (is_resolved IN (true, false))
end note

note right of rate_limit_violations
Indexes:
- idx_rate_limit_violations_user_id (user_id)
- idx_rate_limit_violations_client_id (client_id)
- idx_rate_limit_violations_ip_address (ip_address)
- idx_rate_limit_violations_endpoint (endpoint)
- idx_rate_limit_violations_violation_type (violation_type)
- idx_rate_limit_violations_violation_time (violation_time)
- idx_rate_limit_violations_is_blocked (is_blocked)

Constraints:
- CHK_rate_limit_violations_violation_type (violation_type IN ('REQUEST_RATE', 'BURST_RATE', 'DAILY_LIMIT', 'HOURLY_LIMIT', 'MINUTE_LIMIT'))
- CHK_rate_limit_violations_limit_value (limit_value > 0)
- CHK_rate_limit_violations_actual_value (actual_value > 0)
- CHK_rate_limit_violations_is_blocked (is_blocked IN (true, false))
end note

note right of failed_login_attempts
Indexes:
- idx_failed_login_attempts_username (username)
- idx_failed_login_attempts_ip_address (ip_address)
- idx_failed_login_attempts_attempt_count (attempt_count)
- idx_failed_login_attempts_is_locked (is_locked)
- idx_failed_login_attempts_created_at (created_at)

Constraints:
- CHK_failed_login_attempts_failure_reason (failure_reason IN ('INVALID_CREDENTIALS', 'ACCOUNT_LOCKED', 'ACCOUNT_DISABLED', 'PASSWORD_EXPIRED', 'TOO_MANY_ATTEMPTS'))
- CHK_failed_login_attempts_attempt_count (attempt_count > 0)
- CHK_failed_login_attempts_is_locked (is_locked IN (true, false))
end note

@enduml