apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
  namespace: payment-engine
  labels:
    app: api-gateway
    component: service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/actuator/prometheus"
spec:
  selector:
    app: api-gateway
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: core-banking-service
  namespace: payment-engine
  labels:
    app: core-banking
    component: service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8081"
    prometheus.io/path: "/actuator/prometheus"
spec:
  selector:
    app: core-banking
  ports:
    - name: http
      port: 8081
      targetPort: 8081
      protocol: TCP
    - name: grpc
      port: 9091
      targetPort: 9091
      protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: middleware-service
  namespace: payment-engine
  labels:
    app: middleware
    component: service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8082"
    prometheus.io/path: "/actuator/prometheus"
spec:
  selector:
    app: middleware
  ports:
    - name: http
      port: 8082
      targetPort: 8082
      protocol: TCP
    - name: grpc
      port: 9092
      targetPort: 9092
      protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: payment-engine
  labels:
    app: frontend
    component: service
spec:
  selector:
    app: frontend
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-service
  namespace: payment-engine
  labels:
    app: postgresql
    component: service
spec:
  selector:
    app: postgresql
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
      protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: payment-engine
  labels:
    app: redis
    component: service
spec:
  selector:
    app: redis
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
      protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: payment-engine
  labels:
    app: kafka
    component: service
spec:
  selector:
    app: kafka
  ports:
    - name: kafka
      port: 9092
      targetPort: 9092
      protocol: TCP
    - name: kafka-jmx
      port: 9999
      targetPort: 9999
      protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
  namespace: payment-engine
  labels:
    app: zookeeper
    component: service
spec:
  selector:
    app: zookeeper
  ports:
    - name: client
      port: 2181
      targetPort: 2181
      protocol: TCP
    - name: follower
      port: 2888
      targetPort: 2888
      protocol: TCP
    - name: election
      port: 3888
      targetPort: 3888
      protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: payment-engine
  labels:
    app: prometheus
    component: service
spec:
  selector:
    app: prometheus
  ports:
    - name: web
      port: 9090
      targetPort: 9090
      protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: payment-engine
  labels:
    app: grafana
    component: service
spec:
  selector:
    app: grafana
  ports:
    - name: web
      port: 3000
      targetPort: 3000
      protocol: TCP
  type: ClusterIP

---
# LoadBalancer service for external access
apiVersion: v1
kind: Service
metadata:
  name: payment-engine-loadbalancer
  namespace: payment-engine
  labels:
    app: payment-engine
    component: loadbalancer
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "false"
    service.beta.kubernetes.io/azure-dns-label-name: "payment-engine"
spec:
  selector:
    app: frontend
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
    - name: https
      port: 443
      targetPort: 80
      protocol: TCP
  type: LoadBalancer

---
# Headless service for StatefulSet (PostgreSQL)
apiVersion: v1
kind: Service
metadata:
  name: postgresql-headless
  namespace: payment-engine
  labels:
    app: postgresql
    component: headless
spec:
  clusterIP: None
  selector:
    app: postgresql
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
      protocol: TCP