# Tenant Configuration Operator
# This operator automatically creates Istio resources for new tenants

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tenant-config-operator
  namespace: payment-engine
  labels:
    app: payment-engine
    component: operator
    version: v1

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tenant-config-operator
  labels:
    app: payment-engine
    component: operator
    version: v1
rules:
- apiGroups: ["networking.istio.io"]
  resources: ["gateways", "virtualservices", "destinationrules"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["security.istio.io"]
  resources: ["peerauthentications", "authorizationpolicies", "requestauthentications"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["secrets", "configmaps"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "services"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tenant-config-operator
  labels:
    app: payment-engine
    component: operator
    version: v1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tenant-config-operator
subjects:
- kind: ServiceAccount
  name: tenant-config-operator
  namespace: payment-engine

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tenant-config-templates
  namespace: payment-engine
  labels:
    app: payment-engine
    component: operator
    version: v1
data:
  gateway-template.yaml: |
    apiVersion: networking.istio.io/v1beta1
    kind: Gateway
    metadata:
      name: {{ .TenantID }}-gateway
      namespace: payment-engine
      labels:
        app: payment-engine
        component: gateway
        tenant: {{ .TenantID }}
        version: v1
    spec:
      selector:
        istio: ingressgateway
      servers:
      - port:
          number: 443
          name: https
          protocol: HTTPS
        hosts:
        - "{{ .TenantID }}.{{ .Environment }}.payment-engine.local"
        tls:
          mode: SIMPLE
          credentialName: {{ .TenantID }}-tls

  virtual-service-template.yaml: |
    apiVersion: networking.istio.io/v1beta1
    kind: VirtualService
    metadata:
      name: {{ .TenantID }}-vs
      namespace: payment-engine
      labels:
        app: payment-engine
        component: virtual-service
        tenant: {{ .TenantID }}
        version: v1
    spec:
      hosts:
      - "{{ .TenantID }}.{{ .Environment }}.payment-engine.local"
      gateways:
      - {{ .TenantID }}-gateway
      http:
      - match:
        - uri:
            prefix: /api/v1/auth
        route:
        - destination:
            host: auth-service
            port:
              number: 8080
        headers:
          request:
            set:
              X-Tenant-ID: "{{ .TenantID }}"
      - match:
        - uri:
            prefix: /api/v1/config
        route:
        - destination:
            host: config-service
            port:
              number: 8080
        headers:
          request:
            set:
              X-Tenant-ID: "{{ .TenantID }}"
      - match:
        - uri:
            prefix: /api/v1/iso20022
        route:
        - destination:
            host: payment-processing-service
            port:
              number: 8080
        headers:
          request:
            set:
              X-Tenant-ID: "{{ .TenantID }}"
      - match:
        - uri:
            prefix: /api/v1/banking
        route:
        - destination:
            host: core-banking-service
            port:
              number: 8080
        headers:
          request:
            set:
              X-Tenant-ID: "{{ .TenantID }}"
      - match:
        - uri:
            prefix: /api/v1/tenant-auth-config
        route:
        - destination:
            host: payment-processing-service
            port:
              number: 8080
        headers:
          request:
            set:
              X-Tenant-ID: "{{ .TenantID }}"
      - match:
        - uri:
            prefix: /
        route:
        - destination:
            host: frontend-service
            port:
              number: 3000
        headers:
          request:
            set:
              X-Tenant-ID: "{{ .TenantID }}"

  peer-auth-template.yaml: |
    apiVersion: security.istio.io/v1beta1
    kind: PeerAuthentication
    metadata:
      name: {{ .TenantID }}-peer-auth
      namespace: payment-engine
      labels:
        app: payment-engine
        component: security
        tenant: {{ .TenantID }}
        version: v1
    spec:
      selector:
        matchLabels:
          tenant: {{ .TenantID }}
      mtls:
        mode: STRICT

  authz-template.yaml: |
    apiVersion: security.istio.io/v1beta1
    kind: AuthorizationPolicy
    metadata:
      name: {{ .TenantID }}-authz
      namespace: payment-engine
      labels:
        app: payment-engine
        component: security
        tenant: {{ .TenantID }}
        version: v1
    spec:
      selector:
        matchLabels:
          tenant: {{ .TenantID }}
      rules:
      - from:
        - source:
            principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
        to:
        - operation:
            methods: ["GET", "POST", "PUT", "DELETE", "PATCH"]
            paths: ["/api/v1/*"]
        when:
        - key: request.headers[x-tenant-id]
          values: ["{{ .TenantID }}"]
      - from:
        - source:
            principals: 
            - "cluster.local/ns/payment-engine/sa/auth-service"
            - "cluster.local/ns/payment-engine/sa/config-service"
            - "cluster.local/ns/payment-engine/sa/payment-processing-service"
            - "cluster.local/ns/payment-engine/sa/core-banking-service"
            - "cluster.local/ns/payment-engine/sa/api-gateway-service"
        to:
        - operation:
            methods: ["GET", "POST", "PUT", "DELETE", "PATCH"]
            paths: ["/api/v1/*"]
        when:
        - key: request.headers[x-tenant-id]
          values: ["{{ .TenantID }}"]

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tenant-config-operator
  namespace: payment-engine
  labels:
    app: payment-engine
    component: operator
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tenant-config-operator
  template:
    metadata:
      labels:
        app: tenant-config-operator
        version: v1
    spec:
      serviceAccountName: tenant-config-operator
      containers:
      - name: operator
        image: tenant-config-operator:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: WATCH_NAMESPACE
          value: "payment-engine"
        - name: OPERATOR_NAME
          value: "tenant-config-operator"
        - name: LOG_LEVEL
          value: "info"
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: tenant-config-operator
  namespace: payment-engine
  labels:
    app: payment-engine
    component: operator
    version: v1
spec:
  selector:
    app: tenant-config-operator
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  type: ClusterIP