# Multi-Tenant Virtual Services Configuration
# This configuration provides tenant-specific routing and isolation

---
# Main Virtual Service for general routing
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: payment-engine-main-vs
  namespace: payment-engine
  labels:
    app: payment-engine
    component: virtual-service
    version: v1
spec:
  hosts:
  - "payment-engine.local"
  gateways:
  - payment-engine-multitenant-gateway
  http:
  # Health check endpoint
  - match:
    - uri:
        exact: /health
    route:
    - destination:
        host: api-gateway-service
        port:
          number: 8080
  # API documentation
  - match:
    - uri:
        prefix: /docs
    route:
    - destination:
        host: api-gateway-service
        port:
          number: 8080
  # Default route to frontend
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: frontend-service
        port:
          number: 3000

---
# Tenant-001 Virtual Service
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: tenant-001-vs
  namespace: payment-engine
  labels:
    app: payment-engine
    component: virtual-service
    tenant: tenant-001
    version: v1
spec:
  hosts:
  - "tenant-001.payment-engine.local"
  gateways:
  - tenant-001-gateway
  http:
  # Authentication service
  - match:
    - uri:
        prefix: /api/v1/auth
    route:
    - destination:
        host: auth-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "tenant-001"
  # Configuration service
  - match:
    - uri:
        prefix: /api/v1/config
    route:
    - destination:
        host: config-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "tenant-001"
  # Payment processing service
  - match:
    - uri:
        prefix: /api/v1/iso20022
    route:
    - destination:
        host: payment-processing-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "tenant-001"
  # Core banking service
  - match:
    - uri:
        prefix: /api/v1/banking
    route:
    - destination:
        host: core-banking-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "tenant-001"
  # Tenant auth configuration
  - match:
    - uri:
        prefix: /api/v1/tenant-auth-config
    route:
    - destination:
        host: payment-processing-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "tenant-001"
  # Frontend
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: frontend-service
        port:
          number: 3000
    headers:
      request:
        set:
          X-Tenant-ID: "tenant-001"

---
# Tenant-002 Virtual Service
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: tenant-002-vs
  namespace: payment-engine
  labels:
    app: payment-engine
    component: virtual-service
    tenant: tenant-002
    version: v1
spec:
  hosts:
  - "tenant-002.payment-engine.local"
  gateways:
  - tenant-002-gateway
  http:
  # Authentication service
  - match:
    - uri:
        prefix: /api/v1/auth
    route:
    - destination:
        host: auth-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "tenant-002"
  # Configuration service
  - match:
    - uri:
        prefix: /api/v1/config
    route:
    - destination:
        host: config-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "tenant-002"
  # Payment processing service
  - match:
    - uri:
        prefix: /api/v1/iso20022
    route:
    - destination:
        host: payment-processing-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "tenant-002"
  # Core banking service
  - match:
    - uri:
        prefix: /api/v1/banking
    route:
    - destination:
        host: core-banking-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "tenant-002"
  # Tenant auth configuration
  - match:
    - uri:
        prefix: /api/v1/tenant-auth-config
    route:
    - destination:
        host: payment-processing-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "tenant-002"
  # Frontend
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: frontend-service
        port:
          number: 3000
    headers:
      request:
        set:
          X-Tenant-ID: "tenant-002"

---
# Tenant-003 Virtual Service
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: tenant-003-vs
  namespace: payment-engine
  labels:
    app: payment-engine
    component: virtual-service
    tenant: tenant-003
    version: v1
spec:
  hosts:
  - "tenant-003.payment-engine.local"
  gateways:
  - tenant-003-gateway
  http:
  # Authentication service
  - match:
    - uri:
        prefix: /api/v1/auth
    route:
    - destination:
        host: auth-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "tenant-003"
  # Configuration service
  - match:
    - uri:
        prefix: /api/v1/config
    route:
    - destination:
        host: config-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "tenant-003"
  # Payment processing service
  - match:
    - uri:
        prefix: /api/v1/iso20022
    route:
    - destination:
        host: payment-processing-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "tenant-003"
  # Core banking service
  - match:
    - uri:
        prefix: /api/v1/banking
    route:
    - destination:
        host: core-banking-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "tenant-003"
  # Tenant auth configuration
  - match:
    - uri:
        prefix: /api/v1/tenant-auth-config
    route:
    - destination:
        host: payment-processing-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "tenant-003"
  # Frontend
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: frontend-service
        port:
          number: 3000
    headers:
      request:
        set:
          X-Tenant-ID: "tenant-003"

---
# Development Environment Virtual Service
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: dev-environment-vs
  namespace: payment-engine
  labels:
    app: payment-engine
    component: virtual-service
    environment: development
    version: v1
spec:
  hosts:
  - "*.dev.payment-engine.local"
  gateways:
  - dev-gateway
  http:
  # Route based on subdomain to extract tenant ID
  - match:
    - uri:
        prefix: /api/v1/auth
    route:
    - destination:
        host: auth-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "{{ .Request.Host | regexp.ReplaceAllLiteralString '^([^.]+)\\.dev\\.payment-engine\\.local$' '$1' }}"
  - match:
    - uri:
        prefix: /api/v1/config
    route:
    - destination:
        host: config-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "{{ .Request.Host | regexp.ReplaceAllLiteralString '^([^.]+)\\.dev\\.payment-engine\\.local$' '$1' }}"
  - match:
    - uri:
        prefix: /api/v1/iso20022
    route:
    - destination:
        host: payment-processing-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "{{ .Request.Host | regexp.ReplaceAllLiteralString '^([^.]+)\\.dev\\.payment-engine\\.local$' '$1' }}"
  - match:
    - uri:
        prefix: /api/v1/banking
    route:
    - destination:
        host: core-banking-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "{{ .Request.Host | regexp.ReplaceAllLiteralString '^([^.]+)\\.dev\\.payment-engine\\.local$' '$1' }}"
  - match:
    - uri:
        prefix: /api/v1/tenant-auth-config
    route:
    - destination:
        host: payment-processing-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "{{ .Request.Host | regexp.ReplaceAllLiteralString '^([^.]+)\\.dev\\.payment-engine\\.local$' '$1' }}"
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: frontend-service
        port:
          number: 3000
    headers:
      request:
        set:
          X-Tenant-ID: "{{ .Request.Host | regexp.ReplaceAllLiteralString '^([^.]+)\\.dev\\.payment-engine\\.local$' '$1' }}"

---
# Staging Environment Virtual Service
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: staging-environment-vs
  namespace: payment-engine
  labels:
    app: payment-engine
    component: virtual-service
    environment: staging
    version: v1
spec:
  hosts:
  - "*.staging.payment-engine.local"
  gateways:
  - staging-gateway
  http:
  # Route based on subdomain to extract tenant ID
  - match:
    - uri:
        prefix: /api/v1/auth
    route:
    - destination:
        host: auth-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "{{ .Request.Host | regexp.ReplaceAllLiteralString '^([^.]+)\\.staging\\.payment-engine\\.local$' '$1' }}"
  - match:
    - uri:
        prefix: /api/v1/config
    route:
    - destination:
        host: config-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "{{ .Request.Host | regexp.ReplaceAllLiteralString '^([^.]+)\\.staging\\.payment-engine\\.local$' '$1' }}"
  - match:
    - uri:
        prefix: /api/v1/iso20022
    route:
    - destination:
        host: payment-processing-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "{{ .Request.Host | regexp.ReplaceAllLiteralString '^([^.]+)\\.staging\\.payment-engine\\.local$' '$1' }}"
  - match:
    - uri:
        prefix: /api/v1/banking
    route:
    - destination:
        host: core-banking-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "{{ .Request.Host | regexp.ReplaceAllLiteralString '^([^.]+)\\.staging\\.payment-engine\\.local$' '$1' }}"
  - match:
    - uri:
        prefix: /api/v1/tenant-auth-config
    route:
    - destination:
        host: payment-processing-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "{{ .Request.Host | regexp.ReplaceAllLiteralString '^([^.]+)\\.staging\\.payment-engine\\.local$' '$1' }}"
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: frontend-service
        port:
          number: 3000
    headers:
      request:
        set:
          X-Tenant-ID: "{{ .Request.Host | regexp.ReplaceAllLiteralString '^([^.]+)\\.staging\\.payment-engine\\.local$' '$1' }}"

---
# Production Environment Virtual Service
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: production-environment-vs
  namespace: payment-engine
  labels:
    app: payment-engine
    component: virtual-service
    environment: production
    version: v1
spec:
  hosts:
  - "*.prod.payment-engine.local"
  gateways:
  - production-gateway
  http:
  # Route based on subdomain to extract tenant ID
  - match:
    - uri:
        prefix: /api/v1/auth
    route:
    - destination:
        host: auth-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "{{ .Request.Host | regexp.ReplaceAllLiteralString '^([^.]+)\\.prod\\.payment-engine\\.local$' '$1' }}"
  - match:
    - uri:
        prefix: /api/v1/config
    route:
    - destination:
        host: config-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "{{ .Request.Host | regexp.ReplaceAllLiteralString '^([^.]+)\\.prod\\.payment-engine\\.local$' '$1' }}"
  - match:
    - uri:
        prefix: /api/v1/iso20022
    route:
    - destination:
        host: payment-processing-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "{{ .Request.Host | regexp.ReplaceAllLiteralString '^([^.]+)\\.prod\\.payment-engine\\.local$' '$1' }}"
  - match:
    - uri:
        prefix: /api/v1/banking
    route:
    - destination:
        host: core-banking-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "{{ .Request.Host | regexp.ReplaceAllLiteralString '^([^.]+)\\.prod\\.payment-engine\\.local$' '$1' }}"
  - match:
    - uri:
        prefix: /api/v1/tenant-auth-config
    route:
    - destination:
        host: payment-processing-service
        port:
          number: 8080
    headers:
      request:
        set:
          X-Tenant-ID: "{{ .Request.Host | regexp.ReplaceAllLiteralString '^([^.]+)\\.prod\\.payment-engine\\.local$' '$1' }}"
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: frontend-service
        port:
          number: 3000
    headers:
      request:
        set:
          X-Tenant-ID: "{{ .Request.Host | regexp.ReplaceAllLiteralString '^([^.]+)\\.prod\\.payment-engine\\.local$' '$1' }}"