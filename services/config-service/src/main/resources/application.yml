server:
  port: 8080
  servlet:
    context-path: /api/v1/config

spring:
  application:
    name: config-service
  
  datasource:
    url: jdbc:postgresql://localhost:5432/payment_engine_config
    username: ${DB_USERNAME:payment_engine}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    open-in-view: false
  
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
  
  cache:
    type: redis
    redis:
      time-to-live: 600000
      cache-null-values: false

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics,caches
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Logging
logging:
  level:
    com.paymentengine.config: INFO
    org.springframework.security: DEBUG
    org.springframework.web: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Resilience4j Configuration
resilience4j:
  circuitbreaker:
    instances:
      config-service:
        register-health-indicator: true
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
  retry:
    instances:
      config-service:
        max-attempts: 3
        wait-duration: 1s
        exponential-backoff-multiplier: 2
        retry-exceptions:
          - java.lang.Exception
  timelimiter:
    instances:
      config-service:
        timeout-duration: 30s
        cancel-running-future: true
  bulkhead:
    instances:
      config-service:
        max-concurrent-calls: 10
        max-wait-duration: 1s