# API Gateway Configuration

server:
  port: 8080
  netty:
    connection-timeout: 30s
    idle-timeout: 60s
  compression:
    enabled: true
  http2:
    enabled: true

spring:
  application:
    name: api-gateway
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
  
  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
        shutdown-timeout: 100ms
  
  # Spring Cloud Gateway Configuration
  cloud:
    gateway:
      # Global CORS configuration
      globalcors:
        cors-configurations:
          '[/**]':
            allowed-origins: "*"
            allowed-methods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowed-headers: "*"
            allow-credentials: false
            max-age: 3600
      
      # Route definitions
      routes:
        # Authentication routes
        - id: auth-login
          uri: lb://middleware-service
          predicates:
            - Path=/api/v1/auth/login
            - Method=POST
          filters:
            - name: RateLimit
              args:
                requests-per-window: 10
                window-size-in-seconds: 60
            - name: Logging
              args:
                enabled: true
                message: "Authentication login attempt"
        
        - id: auth-refresh
          uri: lb://middleware-service
          predicates:
            - Path=/api/v1/auth/refresh
            - Method=POST
          filters:
            - name: RateLimit
              args:
                requests-per-window: 50
                window-size-in-seconds: 60
        
        - id: auth-logout
          uri: lb://middleware-service
          predicates:
            - Path=/api/v1/auth/logout
            - Method=POST
          filters:
            - name: Authentication
              args:
                excluded-paths: []
        
        # Transaction routes
        - id: transactions-create
          uri: lb://core-banking-service
          predicates:
            - Path=/api/v1/transactions
            - Method=POST
          filters:
            - name: Authentication
              args:
                excluded-paths: []
            - name: RateLimit
              args:
                requests-per-window: 100
                window-size-in-seconds: 60
            - name: CircuitBreaker
              args:
                name: transaction-circuit-breaker
                fallbackUri: forward:/fallback/transaction
            - name: Logging
              args:
                enabled: true
                message: "Transaction creation request"
        
        - id: transactions-get
          uri: lb://core-banking-service
          predicates:
            - Path=/api/v1/transactions/**
            - Method=GET
          filters:
            - name: Authentication
              args:
                excluded-paths: []
            - name: RateLimit
              args:
                requests-per-window: 1000
                window-size-in-seconds: 60
            - name: CircuitBreaker
              args:
                name: transaction-circuit-breaker
                fallbackUri: forward:/fallback/transaction
        
        - id: transactions-search
          uri: lb://core-banking-service
          predicates:
            - Path=/api/v1/transactions/search
            - Method=GET
          filters:
            - name: Authentication
              args:
                excluded-paths: []
            - name: RateLimit
              args:
                requests-per-window: 500
                window-size-in-seconds: 60
        
        - id: transactions-cancel
          uri: lb://core-banking-service
          predicates:
            - Path=/api/v1/transactions/*/cancel
            - Method=POST
          filters:
            - name: Authentication
              args:
                excluded-paths: []
            - name: RateLimit
              args:
                requests-per-window: 50
                window-size-in-seconds: 60
        
        # Account routes
        - id: accounts-get
          uri: lb://core-banking-service
          predicates:
            - Path=/api/v1/accounts/**
            - Method=GET
          filters:
            - name: Authentication
              args:
                excluded-paths: []
            - name: RateLimit
              args:
                requests-per-window: 1000
                window-size-in-seconds: 60
            - name: CircuitBreaker
              args:
                name: account-circuit-breaker
                fallbackUri: forward:/fallback/account
        
        - id: accounts-search
          uri: lb://core-banking-service
          predicates:
            - Path=/api/v1/accounts/search
            - Method=GET
          filters:
            - name: Authentication
              args:
                excluded-paths: []
            - name: RateLimit
              args:
                requests-per-window: 500
                window-size-in-seconds: 60
        
        # Payment Types routes
        - id: payment-types
          uri: lb://core-banking-service
          predicates:
            - Path=/api/v1/payment-types/**
          filters:
            - name: Authentication
              args:
                excluded-paths: []
            - name: RateLimit
              args:
                requests-per-window: 1000
                window-size-in-seconds: 60
        
        # Customer routes
        - id: customers
          uri: lb://core-banking-service
          predicates:
            - Path=/api/v1/customers/**
          filters:
            - name: Authentication
              args:
                excluded-paths: []
            - name: RateLimit
              args:
                requests-per-window: 500
                window-size-in-seconds: 60
        
        # Dashboard and reporting routes
        - id: dashboard
          uri: lb://middleware-service
          predicates:
            - Path=/api/v1/dashboard/**
          filters:
            - name: Authentication
              args:
                excluded-paths: []
            - name: RateLimit
              args:
                requests-per-window: 200
                window-size-in-seconds: 60
        
        # Webhook routes (no authentication for external systems)
        - id: webhooks
          uri: lb://middleware-service
          predicates:
            - Path=/api/v1/webhooks/**
          filters:
            - name: RateLimit
              args:
                requests-per-window: 500
                window-size-in-seconds: 60
            - name: CircuitBreaker
              args:
                name: webhook-circuit-breaker
                fallbackUri: forward:/fallback/webhook
        
        # Health and monitoring routes (no authentication)
        - id: actuator-health
          uri: http://localhost:8080
          predicates:
            - Path=/actuator/health/**
          filters:
            - name: Authentication
              args:
                excluded-paths:
                  - /actuator/health/**
        
        - id: actuator-metrics
          uri: lb://core-banking-service
          predicates:
            - Path=/actuator/prometheus, /actuator/metrics/**
          filters:
            - name: Authentication
              args:
                excluded-paths:
                  - /actuator/prometheus
                  - /actuator/metrics/**
      
      # Circuit breaker configuration
      default-filters:
        - name: RequestSize
          args:
            maxSize: 5MB
        - name: Retry
          args:
            retries: 3
            statuses: BAD_GATEWAY,GATEWAY_TIMEOUT
            methods: GET,POST,PUT,DELETE
            backoff:
              firstBackoff: 50ms
              maxBackoff: 500ms
              factor: 2
              basedOnPreviousValue: false

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:your-secret-key-here-change-in-production}
  expiration: 3600 # 1 hour in seconds

# Circuit Breaker Configuration
resilience4j:
  circuitbreaker:
    instances:
      transaction-circuit-breaker:
        register-health-indicator: true
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50
        event-consumer-buffer-size: 10
        record-exceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
        ignore-exceptions:
          - java.lang.IllegalArgumentException
      
      account-circuit-breaker:
        register-health-indicator: true
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 5s
      
      webhook-circuit-breaker:
        register-health-indicator: true
        sliding-window-size: 20
        minimum-number-of-calls: 10
        failure-rate-threshold: 60
        wait-duration-in-open-state: 30s

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,gateway
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
    gateway:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      environment: ${ENVIRONMENT:local}
    distribution:
      percentiles-histogram:
        http.server.requests: true
        gateway.requests: true
      slo:
        http.server.requests: 10ms,50ms,100ms,200ms,500ms,1s,2s,5s

# Logging Configuration
logging:
  level:
    com.paymentengine.gateway: ${LOG_LEVEL:INFO}
    org.springframework.cloud.gateway: ${GATEWAY_LOG_LEVEL:INFO}
    org.springframework.security: WARN
    io.netty: WARN
    reactor.netty: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{correlationId}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{correlationId}] %logger{36} - %msg%n"

# Environment Specific Configurations
---
spring:
  config:
    activate:
      on-profile: local

  data:
    redis:
      host: localhost
      port: 6379

logging:
  level:
    com.paymentengine.gateway: DEBUG
    org.springframework.cloud.gateway: DEBUG

---
spring:
  config:
    activate:
      on-profile: docker

  data:
    redis:
      host: redis

---
spring:
  config:
    activate:
      on-profile: production

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}

logging:
  level:
    com.paymentengine.gateway: INFO
    org.springframework.cloud.gateway: WARN

# Enhanced security settings for production
management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus