server:
  port: 8084

spring:
  application:
    name: payshap-adapter-service
  
  datasource:
    url: jdbc:postgresql://localhost:5432/payments_engine
    username: ${DB_USERNAME:payments_user}
    password: ${DB_PASSWORD:payments_password}
    driver-class-name: org.postgresql.Driver
    
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true

# PayShap Adapter Configuration
payshap:
  adapter:
    endpoint: ${PAYSHAP_ENDPOINT:https://payshap.sarb.co.za/api}
    timeout: ${PAYSHAP_TIMEOUT:5000}
    retry-attempts: ${PAYSHAP_RETRY_ATTEMPTS:3}
    amount-limit: ${PAYSHAP_AMOUNT_LIMIT:3000.00}
    currency: ${PAYSHAP_CURRENCY:ZAR}
    proxy-registry:
      endpoint: ${PROXY_REGISTRY_ENDPOINT:https://proxy.sarb.co.za/api}
      timeout: ${PROXY_REGISTRY_TIMEOUT:3000}
      retry-attempts: ${PROXY_REGISTRY_RETRY_ATTEMPTS:2}

# Resilience4j Configuration
resilience4j:
  circuitbreaker:
    instances:
      payshap-adapter:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
      proxy-registry:
        failure-rate-threshold: 40
        wait-duration-in-open-state: 20s
        sliding-window-size: 10
        minimum-number-of-calls: 3
        permitted-number-of-calls-in-half-open-state: 2
  retry:
    instances:
      payshap-adapter:
        max-attempts: 3
        wait-duration: 1s
        retry-exceptions:
          - java.net.ConnectException
          - java.net.SocketTimeoutException
          - org.springframework.web.client.ResourceAccessException
      proxy-registry:
        max-attempts: 2
        wait-duration: 500ms
        retry-exceptions:
          - java.net.ConnectException
          - java.net.SocketTimeoutException
  timelimiter:
    instances:
      payshap-adapter:
        timeout-duration: 5s
      proxy-registry:
        timeout-duration: 3s

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Logging
logging:
  level:
    com.payments.payshapadapter: INFO
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
