# Feature Breakdown Tree - Phase 0 YAML Export for Orchestration
# Version: 2.0
# Purpose: Enable programmatic access for AI agent orchestration tools (CrewAI, LangChain, AutoGPT)
# Source: docs/34-FEATURE-BREAKDOWN-TREE-ENHANCED.md

metadata:
  version: "2.0"
  phase_id: "phase-0"
  phase_name: "Foundation"
  type: "sequential"
  description: "Must be completed FIRST before any services"
  estimated_duration_days: "10-12"
  features_count: 5
  agents_count: 5
  created_date: "2025-10-13"
  last_updated: "2025-10-13"
  source_document: "docs/34-FEATURE-BREAKDOWN-TREE-ENHANCED.md"
  change_log:
    - version: "2.0"
      date: "2025-10-13"
      changes:
        - "Extracted Phase 0 from master YAML"
        - "Aligned with Enhanced Feature Breakdown Tree"

features:
  - id: "0.1"
    name: "Database Schemas"
    agent: "Schema Agent"
    template_ref: "docs/35-AI-AGENT-PROMPT-TEMPLATES.md#feature-01-database-schemas"
    complexity: "medium"
    estimation_days: "3-5"
    nominal_days: 4
    ai_factors:
      - "Retry 2x on SQL syntax errors"
      - "Hallucination risk: LOW"
    spring_boot_guidance:
      - "Use Flyway for migrations"
      - "Enable Row-Level Security (RLS)"
    mocks_required: []
    input:
      - "docs/05-DATABASE-SCHEMAS.md"
    output:
      - "PostgreSQL migration scripts (Flyway)"
      - "All 20+ tables created"
      - "Indexes defined"
      - "RLS configured"
    kpis:
      - metric: "Database migration time"
        target: "< 60 seconds"
      - metric: "Indexed query performance"
        target: "< 50ms (p95)"
    dod:
      - "All 20+ tables created successfully"
      - "All foreign key constraints validated"
      - "RLS policies tested (100% tenant isolation)"
    fallback_plan: "If agent fails → Human DBA reviews, generates manually"
    dependencies: []

  - id: "0.2"
    name: "Event Schemas (AsyncAPI)"
    agent: "Event Schema Agent"
    template_ref: "docs/35-AI-AGENT-PROMPT-TEMPLATES.md#feature-02-event-schemas"
    complexity: "low"
    estimation_days: "1-2"
    nominal_days: 1
    ai_factors:
      - "Retry 2x on JSON Schema validation errors"
      - "Hallucination risk: LOW"
    spring_boot_guidance:
      - "Use Spring Cloud Stream for event publishing"
      - "Include correlation ID in message headers"
    mocks_required: []
    input:
      - "docs/03-EVENT-SCHEMAS.md"
    output:
      - "AsyncAPI 2.0 specifications"
      - "Event payload definitions (JSON Schema)"
    kpis:
      - metric: "Event schema validation time"
        target: "< 100ms per event"
      - metric: "Event size"
        target: "< 10 KB (compressed)"
    dod:
      - "All 25+ events defined in AsyncAPI 2.0"
      - "JSON Schema validation passes"
    fallback_plan: "If agent fails → Human architect reviews, generates manually"
    dependencies: []

  - id: "0.3"
    name: "Domain Models"
    agent: "Domain Model Agent"
    template_ref: "docs/35-AI-AGENT-PROMPT-TEMPLATES.md#feature-03-domain-models"
    complexity: "medium"
    estimation_days: "2-4"
    nominal_days: 3
    ai_factors:
      - "Retry 2x on compilation errors"
      - "Hallucination risk: MEDIUM (complex DDD)"
      - "Feedback loop: Review aggregates for DDD correctness"
    spring_boot_guidance:
      - "Use Spring Data JPA for domain entities"
      - "Make value objects immutable (records)"
      - "Add business logic in domain model"
    mocks_required: []
    input:
      - "docs/14-DDD-IMPLEMENTATION.md"
      - "docs/05-DATABASE-SCHEMAS.md"
    output:
      - "Java domain entities (JPA annotated)"
      - "Value objects (immutable)"
      - "Aggregates (with business logic)"
    kpis:
      - metric: "Domain model unit test coverage"
        target: "> 90%"
      - metric: "Value object immutability"
        target: "100% (no setters)"
    dod:
      - "All aggregates, value objects, entities defined"
      - "Business logic in domain model"
      - "All domain classes compile"
    fallback_plan: "If agent fails → Human DDD expert reviews, refactors"
    dependencies: ["0.1"]

  - id: "0.4"
    name: "Shared Libraries"
    agent: "Library Agent"
    template_ref: "docs/35-AI-AGENT-PROMPT-TEMPLATES.md#feature-04-shared-libraries"
    complexity: "medium"
    estimation_days: "2-3"
    nominal_days: 3
    ai_factors:
      - "Retry 2x on Maven dependency conflicts"
      - "Hallucination risk: LOW"
    spring_boot_guidance:
      - "Idempotency Handler (Redis-backed)"
      - "Correlation ID Filter (MDC)"
      - "Tenant Context Holder (ThreadLocal)"
    mocks_required: []
    input:
      - "docs/29-ENTERPRISE-INTEGRATION-PATTERNS.md"
      - "Domain models (from 0.3)"
      - "Event schemas (from 0.2)"
    output:
      - "Shared utility libraries (Maven modules)"
      - "Event publishing library"
      - "API client library"
      - "Error handling framework"
    kpis:
      - metric: "Library dependency resolution time"
        target: "< 10 seconds"
      - metric: "Event publishing latency"
        target: "< 50ms (p95)"
    dod:
      - "All 4 shared libraries built and published"
      - "Unit tests for all utility classes (> 80% coverage)"
      - "Integration test for event publisher"
    fallback_plan: "If agent fails → Human developer reviews libraries, adds missing utilities"
    dependencies: ["0.2", "0.3"]

  - id: "0.5"
    name: "Infrastructure Setup"
    agent: "Infrastructure Agent"
    template_ref: "docs/35-AI-AGENT-PROMPT-TEMPLATES.md#feature-05-infrastructure-setup"
    complexity: "high"
    estimation_days: "4-6"
    nominal_days: 5
    ai_factors:
      - "Retry 3x on Terraform apply failures"
      - "Hallucination risk: MEDIUM (Terraform syntax)"
      - "Feedback loop: Validate Terraform plan before apply"
    spring_boot_guidance:
      - "Connect to Azure resources"
      - "Configure connection strings"
    mocks_required: []
    input:
      - "docs/07-AZURE-INFRASTRUCTURE.md"
      - "Azure subscription details"
    output:
      - "AKS cluster provisioned (3-node minimum)"
      - "Azure PostgreSQL Flexible Server"
      - "Azure Cache for Redis"
      - "Azure Service Bus (Premium tier)"
      - "Virtual Network and subnets configured"
    kpis:
      - metric: "Infrastructure provisioning time"
        target: "< 30 minutes"
      - metric: "AKS cluster ready state"
        target: "100% (all nodes healthy)"
      - metric: "Database connection pool latency"
        target: "< 10ms"
    dod:
      - "AKS cluster accessible via kubectl"
      - "PostgreSQL database connection successful"
      - "Redis cache connection successful"
      - "Azure Service Bus topic/queue created"
    fallback_plan: "If Terraform fails → Review Terraform plan, fix syntax errors, re-apply"
    dependencies: []
