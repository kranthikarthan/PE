# Helm Values for Air-Gapped Deployment
# This file contains configuration values for deploying in air-gapped environments

# Global configuration
global:
  imageRegistry: "local-registry:5000"
  imageTag: "latest"
  imagePullPolicy: "Always"
  namespace: "payment-engine"

# Image configuration
image:
  registry: "local-registry:5000"
  tag: "latest"
  pullPolicy: "Always"

# Service configuration
service:
  type: "ClusterIP"
  port: 8080
  targetPort: 8080

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  hosts:
    - host: "payment-engine.local"
      paths:
        - path: "/"
          pathType: "Prefix"
          service:
            name: "frontend-service"
            port: 80
        - path: "/api"
          pathType: "Prefix"
          service:
            name: "middleware-service"
            port: 8080
        - path: "/payment-engine"
          pathType: "Prefix"
          service:
            name: "payment-engine-service"
            port: 8080

# Resource configuration
resources:
  requests:
    memory: "1Gi"
    cpu: "500m"
  limits:
    memory: "2Gi"
    cpu: "1000m"

# Replica configuration
replicaCount: 2

# Database configuration
database:
  enabled: true
  image:
    registry: "local-registry:5000"
    repository: "postgres"
    tag: "15-alpine"
  persistence:
    enabled: true
    size: "10Gi"
    storageClass: ""
  auth:
    postgresPassword: "secure_password_123"
    username: "payment_user"
    database: "payment_engine"

# Redis configuration
redis:
  enabled: true
  image:
    registry: "local-registry:5000"
    repository: "redis"
    tag: "7-alpine"
  auth:
    enabled: false

# Monitoring configuration
monitoring:
  enabled: false  # Disabled in air-gapped environment
  prometheus:
    enabled: false
  grafana:
    enabled: false

# Logging configuration
logging:
  level: "INFO"
  format: "json"

# Security configuration
security:
  jwt:
    secret: "your-super-secret-jwt-key-here"
  encryption:
    enabled: true
    algorithm: "AES/GCM/NoPadding"

# Air-gapped specific configuration
airgap:
  enabled: true
  offlineMode: true
  packageManager: "offline"
  registry:
    url: "local-registry:5000"
    insecure: true

# Environment variables
env:
  SPRING_PROFILES_ACTIVE: "airgap"
  LOG_LEVEL: "INFO"
  JAVA_OPTS: "-Xmx2g -Xms1g"

# Node selector for air-gapped nodes
nodeSelector: {}

# Tolerations for air-gapped nodes
tolerations: []

# Affinity rules
affinity: {}

# Pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

# Container security context
securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  capabilities:
    drop:
      - ALL

# Liveness and readiness probes
probes:
  liveness:
    httpGet:
      path: "/actuator/health"
      port: 8080
    initialDelaySeconds: 60
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 3
  readiness:
    httpGet:
      path: "/actuator/health/readiness"
      port: 8080
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

# Horizontal Pod Autoscaler
autoscaling:
  enabled: false  # Disabled in air-gapped environment
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Network policies
networkPolicy:
  enabled: false  # Disabled in air-gapped environment

# Service mesh configuration
serviceMesh:
  enabled: false  # Disabled in air-gapped environment
  istio:
    enabled: false

# Backup configuration
backup:
  enabled: false  # Disabled in air-gapped environment
  schedule: "0 2 * * *"
  retention: "7d"

# Disaster recovery
disasterRecovery:
  enabled: false  # Disabled in air-gapped environment
  rto: "4h"
  rpo: "1h"