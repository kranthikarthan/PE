asyncapi: 2.6.0
info:
  title: Payments Engine Event Bus
  version: 1.0.0
  description: Event-driven communication for South African Payments Engine
  contact:
    name: Payments Team
    email: payments@paymentsengine.co.za
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  production:
    url: paymentengine.servicebus.windows.net
    protocol: amqps
    description: Azure Service Bus Production
    security:
      - sasKey: []
  staging:
    url: paymentengine-staging.servicebus.windows.net
    protocol: amqps
    description: Azure Service Bus Staging
    security:
      - sasKey: []
  development:
    url: paymentengine-dev.servicebus.windows.net
    protocol: amqps
    description: Azure Service Bus Development
    security:
      - sasKey: []

security:
  - sasKey: []

channels:
  payment/initiated:
    description: Payment initiation events
    subscribe:
      message:
        $ref: '#/components/messages/PaymentInitiated'
  
  payment/validated:
    description: Payment validation events
    subscribe:
      message:
        $ref: '#/components/messages/PaymentValidated'
  
  payment/validation-failed:
    description: Payment validation failure events
    subscribe:
      message:
        $ref: '#/components/messages/ValidationFailed'
  
  account/funds-reserved:
    description: Funds reservation events
    subscribe:
      message:
        $ref: '#/components/messages/FundsReserved'
  
  account/insufficient-funds:
    description: Insufficient funds events
    subscribe:
      message:
        $ref: '#/components/messages/InsufficientFunds'
  
  routing/determined:
    description: Routing determination events
    subscribe:
      message:
        $ref: '#/components/messages/RoutingDetermined'
  
  transaction/created:
    description: Transaction creation events
    subscribe:
      message:
        $ref: '#/components/messages/TransactionCreated'
  
  transaction/processing:
    description: Transaction processing events
    subscribe:
      message:
        $ref: '#/components/messages/TransactionProcessing'
  
  clearing/submitted:
    description: Clearing submission events
    subscribe:
      message:
        $ref: '#/components/messages/ClearingSubmitted'
  
  clearing/acknowledged:
    description: Clearing acknowledgment events
    subscribe:
      message:
        $ref: '#/components/messages/ClearingAcknowledged'
  
  clearing/completed:
    description: Clearing completion events
    subscribe:
      message:
        $ref: '#/components/messages/ClearingCompleted'
  
  clearing/failed:
    description: Clearing failure events
    subscribe:
      message:
        $ref: '#/components/messages/ClearingFailed'
  
  payment/completed:
    description: Payment completion events
    subscribe:
      message:
        $ref: '#/components/messages/PaymentCompleted'
  
  payment/failed:
    description: Payment failure events
    subscribe:
      message:
        $ref: '#/components/messages/PaymentFailed'
  
  limit/consumed:
    description: Limit consumed (used) events
    subscribe:
      message:
        $ref: '#/components/messages/LimitConsumed'
  
  limit/released:
    description: Limit released (reservation cancelled) events
    subscribe:
      message:
        $ref: '#/components/messages/LimitReleased'
  
  settlement/batch-created:
    description: Settlement batch creation events
    subscribe:
      message:
        $ref: '#/components/messages/SettlementBatchCreated'
  
  settlement/completed:
    description: Settlement completion events
    subscribe:
      message:
        $ref: '#/components/messages/SettlementCompleted'
  
  saga/started:
    description: Saga start events
    subscribe:
      message:
        $ref: '#/components/messages/SagaStarted'
  
  saga/step-completed:
    description: Saga step completion events
    subscribe:
      message:
        $ref: '#/components/messages/SagaStepCompleted'
  
  saga/compensating:
    description: Saga compensation events
    subscribe:
      message:
        $ref: '#/components/messages/SagaCompensating'
  
  saga/completed:
    description: Saga completion events
    subscribe:
      message:
        $ref: '#/components/messages/SagaCompleted'
  
  notification/sent:
    description: Notification sent events
    subscribe:
      message:
        $ref: '#/components/messages/NotificationSent'
  
  notification/failed:
    description: Notification failure events
    subscribe:
      message:
        $ref: '#/components/messages/NotificationFailed'
  
  audit/event-logged:
    description: Audit event logging
    subscribe:
      message:
        $ref: '#/components/messages/AuditEventLogged'
  
  reconciliation/started:
    description: Reconciliation process started
    subscribe:
      message:
        $ref: '#/components/messages/ReconciliationStarted'
  
  reconciliation/completed:
    description: Reconciliation process completed
    subscribe:
      message:
        $ref: '#/components/messages/ReconciliationCompleted'
  
  reconciliation/exception:
    description: Reconciliation exceptions
    subscribe:
      message:
        $ref: '#/components/messages/ReconciliationException'
  
  tenant/created:
    description: Tenant creation events
    subscribe:
      message:
        $ref: '#/components/messages/TenantCreated'
  
  tenant/updated:
    description: Tenant update events
    subscribe:
      message:
        $ref: '#/components/messages/TenantUpdated'
  
  user/authenticated:
    description: User authentication events
    subscribe:
      message:
        $ref: '#/components/messages/UserAuthenticated'
  
  user/authorization-failed:
    description: User authorization failure events
    subscribe:
      message:
        $ref: '#/components/messages/UserAuthorizationFailed'

components:
  messages:
    PaymentInitiated:
      name: PaymentInitiated
      title: Payment Initiated Event
      summary: Published when a payment is initiated
      contentType: application/json
      payload:
        $ref: '#/components/schemas/PaymentInitiatedPayload'
    
    PaymentValidated:
      name: PaymentValidated
      title: Payment Validated Event
      summary: Published when payment passes validation
      contentType: application/json
      payload:
        $ref: '#/components/schemas/PaymentValidatedPayload'
    
    ValidationFailed:
      name: ValidationFailed
      title: Validation Failed Event
      summary: Published when payment fails validation
      contentType: application/json
      payload:
        $ref: '#/components/schemas/ValidationFailedPayload'
    
    FundsReserved:
      name: FundsReserved
      title: Funds Reserved Event
      summary: Published when funds are reserved on account
      contentType: application/json
      payload:
        $ref: '#/components/schemas/FundsReservedPayload'
    
    InsufficientFunds:
      name: InsufficientFunds
      title: Insufficient Funds Event
      summary: Published when account has insufficient funds
      contentType: application/json
      payload:
        $ref: '#/components/schemas/InsufficientFundsPayload'
    
    RoutingDetermined:
      name: RoutingDetermined
      title: Routing Determined Event
      summary: Published when payment routing is determined
      contentType: application/json
      payload:
        $ref: '#/components/schemas/RoutingDeterminedPayload'
    
    TransactionCreated:
      name: TransactionCreated
      title: Transaction Created Event
      summary: Published when transaction record is created
      contentType: application/json
      payload:
        $ref: '#/components/schemas/TransactionCreatedPayload'
    
    TransactionProcessing:
      name: TransactionProcessing
      title: Transaction Processing Event
      summary: Published when transaction enters processing state
      contentType: application/json
      payload:
        $ref: '#/components/schemas/TransactionProcessingPayload'
    
    ClearingSubmitted:
      name: ClearingSubmitted
      title: Clearing Submitted Event
      summary: Published when payment submitted to clearing system
      contentType: application/json
      payload:
        $ref: '#/components/schemas/ClearingSubmittedPayload'
    
    ClearingAcknowledged:
      name: ClearingAcknowledged
      title: Clearing Acknowledged Event
      summary: Published when clearing system acknowledges receipt
      contentType: application/json
      payload:
        $ref: '#/components/schemas/ClearingAcknowledgedPayload'
    
    ClearingCompleted:
      name: ClearingCompleted
      title: Clearing Completed Event
      summary: Published when clearing process completes
      contentType: application/json
      payload:
        $ref: '#/components/schemas/ClearingCompletedPayload'
    
    ClearingFailed:
      name: ClearingFailed
      title: Clearing Failed Event
      summary: Published when clearing process fails
      contentType: application/json
      payload:
        $ref: '#/components/schemas/ClearingFailedPayload'
    
    PaymentCompleted:
      name: PaymentCompleted
      title: Payment Completed Event
      summary: Published when payment completes successfully
      contentType: application/json
      payload:
        $ref: '#/components/schemas/PaymentCompletedPayload'
    
    PaymentFailed:
      name: PaymentFailed
      title: Payment Failed Event
      summary: Published when payment fails
      contentType: application/json
      payload:
        $ref: '#/components/schemas/PaymentFailedPayload'
    
    SettlementBatchCreated:
      name: SettlementBatchCreated
      title: Settlement Batch Created Event
      summary: Published when settlement batch is created
      contentType: application/json
      payload:
        $ref: '#/components/schemas/SettlementBatchCreatedPayload'
    
    SettlementCompleted:
      name: SettlementCompleted
      title: Settlement Completed Event
      summary: Published when settlement completes
      contentType: application/json
      payload:
        $ref: '#/components/schemas/SettlementCompletedPayload'
    
    SagaStarted:
      name: SagaStarted
      title: Saga Started Event
      summary: Published when saga orchestration starts
      contentType: application/json
      payload:
        $ref: '#/components/schemas/SagaStartedPayload'
    
    SagaStepCompleted:
      name: SagaStepCompleted
      title: Saga Step Completed Event
      summary: Published when a saga step completes
      contentType: application/json
      payload:
        $ref: '#/components/schemas/SagaStepCompletedPayload'
    
    SagaCompensating:
      name: SagaCompensating
      title: Saga Compensating Event
      summary: Published when saga enters compensation phase
      contentType: application/json
      payload:
        $ref: '#/components/schemas/SagaCompensatingPayload'
    
    SagaCompleted:
      name: SagaCompleted
      title: Saga Completed Event
      summary: Published when saga completes
      contentType: application/json
      payload:
        $ref: '#/components/schemas/SagaCompletedPayload'
    
    LimitConsumed:
      name: LimitConsumed
      title: Limit Consumed Event
      summary: Published when customer limit is consumed after successful payment
      contentType: application/json
      payload:
        $ref: '#/components/schemas/LimitConsumedPayload'
    
    LimitReleased:
      name: LimitReleased
      title: Limit Released Event
      summary: Published when reserved limit is released (payment failed/cancelled)
      contentType: application/json
      payload:
        $ref: '#/components/schemas/LimitReleasedPayload'
    
    NotificationSent:
      name: NotificationSent
      title: Notification Sent Event
      summary: Published when notification is successfully sent
      contentType: application/json
      payload:
        $ref: '#/components/schemas/NotificationSentPayload'
    
    NotificationFailed:
      name: NotificationFailed
      title: Notification Failed Event
      summary: Published when notification fails to send
      contentType: application/json
      payload:
        $ref: '#/components/schemas/NotificationFailedPayload'
    
    AuditEventLogged:
      name: AuditEventLogged
      title: Audit Event Logged
      summary: Published when audit event is logged
      contentType: application/json
      payload:
        $ref: '#/components/schemas/AuditEventLoggedPayload'
    
    ReconciliationStarted:
      name: ReconciliationStarted
      title: Reconciliation Started Event
      summary: Published when reconciliation process starts
      contentType: application/json
      payload:
        $ref: '#/components/schemas/ReconciliationStartedPayload'
    
    ReconciliationCompleted:
      name: ReconciliationCompleted
      title: Reconciliation Completed Event
      summary: Published when reconciliation process completes
      contentType: application/json
      payload:
        $ref: '#/components/schemas/ReconciliationCompletedPayload'
    
    ReconciliationException:
      name: ReconciliationException
      title: Reconciliation Exception Event
      summary: Published when reconciliation exception occurs
      contentType: application/json
      payload:
        $ref: '#/components/schemas/ReconciliationExceptionPayload'
    
    TenantCreated:
      name: TenantCreated
      title: Tenant Created Event
      summary: Published when new tenant is created
      contentType: application/json
      payload:
        $ref: '#/components/schemas/TenantCreatedPayload'
    
    TenantUpdated:
      name: TenantUpdated
      title: Tenant Updated Event
      summary: Published when tenant is updated
      contentType: application/json
      payload:
        $ref: '#/components/schemas/TenantUpdatedPayload'
    
    UserAuthenticated:
      name: UserAuthenticated
      title: User Authenticated Event
      summary: Published when user successfully authenticates
      contentType: application/json
      payload:
        $ref: '#/components/schemas/UserAuthenticatedPayload'
    
    UserAuthorizationFailed:
      name: UserAuthorizationFailed
      title: User Authorization Failed Event
      summary: Published when user authorization fails
      contentType: application/json
      payload:
        $ref: '#/components/schemas/UserAuthorizationFailedPayload'

  schemas:
    EventMetadata:
      type: object
      required:
        - eventId
        - eventType
        - timestamp
        - correlationId
        - source
        - tenantId
      properties:
        eventId:
          type: string
          format: uuid
          description: Unique event identifier
        eventType:
          type: string
          description: Type of event
        timestamp:
          type: string
          format: date-time
          description: Event occurrence timestamp (ISO 8601)
        correlationId:
          type: string
          format: uuid
          description: Correlation ID for tracing across services
        causationId:
          type: string
          format: uuid
          description: ID of event that caused this event
        source:
          type: string
          description: Source service that published event
        version:
          type: string
          description: Event schema version
          default: "1.0"
        tenantId:
          type: string
          description: Tenant identifier for multi-tenancy
        businessUnitId:
          type: string
          description: Business unit identifier within tenant
    
    PaymentInitiatedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - paymentId
            - sourceAccount
            - destinationAccount
            - amount
            - currency
            - paymentType
          properties:
            paymentId:
              type: string
              pattern: '^PAY-\d{4}-[A-Z0-9]{10}$'
            idempotencyKey:
              type: string
              format: uuid
            sourceAccount:
              type: string
              pattern: '^\d{10,20}$'
            destinationAccount:
              type: string
              pattern: '^\d{10,20}$'
            amount:
              type: number
              format: double
              minimum: 0.01
              maximum: 999999999.99
            currency:
              type: string
              enum: [ZAR]
            reference:
              type: string
              maxLength: 200
            paymentType:
              type: string
              enum: [EFT, RTC, RTGS, DEBIT_ORDER, CARD, WALLET]
            priority:
              type: string
              enum: [NORMAL, HIGH, URGENT]
              default: NORMAL
            initiatedBy:
              type: string
            initiatedAt:
              type: string
              format: date-time
    
    PaymentValidatedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - paymentId
            - validationStatus
          properties:
            paymentId:
              type: string
            validationStatus:
              type: string
              enum: [VALID, INVALID]
            validationRules:
              type: array
              items:
                type: object
                properties:
                  ruleId:
                    type: string
                  ruleName:
                    type: string
                  result:
                    type: string
                    enum: [PASS, FAIL]
            fraudScore:
              type: number
              format: double
              minimum: 0.0
              maximum: 1.0
            riskLevel:
              type: string
              enum: [LOW, MEDIUM, HIGH, CRITICAL]
            validatedAt:
              type: string
              format: date-time
    
    ValidationFailedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - paymentId
            - failureReasons
          properties:
            paymentId:
              type: string
            failureReasons:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  field:
                    type: string
            fraudScore:
              type: number
              format: double
            failedAt:
              type: string
              format: date-time
    
    FundsReservedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - holdId
            - accountNumber
            - amount
            - reference
          properties:
            holdId:
              type: string
            accountNumber:
              type: string
            amount:
              type: number
              format: double
            reference:
              type: string
            expiresAt:
              type: string
              format: date-time
            reservedAt:
              type: string
              format: date-time
    
    InsufficientFundsPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - paymentId
            - accountNumber
            - requestedAmount
            - availableBalance
          properties:
            paymentId:
              type: string
            accountNumber:
              type: string
            requestedAmount:
              type: number
              format: double
            availableBalance:
              type: number
              format: double
            shortfall:
              type: number
              format: double
    
    RoutingDeterminedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - paymentId
            - clearingSystem
            - channel
          properties:
            paymentId:
              type: string
            clearingSystem:
              type: string
              enum: [SAMOS, BANKSERV_ACH, BANKSERV_RTC, SASWITCH, SWIFT]
            channel:
              type: string
            estimatedCompletionTime:
              type: string
              format: date-time
            routingReason:
              type: string
            determinedAt:
              type: string
              format: date-time
    
    TransactionCreatedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - transactionId
            - paymentId
            - debitAccount
            - creditAccount
            - amount
          properties:
            transactionId:
              type: string
              pattern: '^TXN-\d{4}-[A-Z0-9]{10}$'
            paymentId:
              type: string
            debitAccount:
              type: string
            creditAccount:
              type: string
            amount:
              type: number
              format: double
            currency:
              type: string
            transactionType:
              type: string
            createdAt:
              type: string
              format: date-time
    
    TransactionProcessingPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - transactionId
            - status
          properties:
            transactionId:
              type: string
            status:
              type: string
              enum: [PROCESSING]
            processingStartedAt:
              type: string
              format: date-time
    
    ClearingSubmittedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - clearingReference
            - transactionId
            - clearingSystem
          properties:
            clearingReference:
              type: string
            transactionId:
              type: string
            clearingSystem:
              type: string
            submittedAt:
              type: string
              format: date-time
    
    ClearingAcknowledgedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - clearingReference
            - transactionId
          properties:
            clearingReference:
              type: string
            transactionId:
              type: string
            acknowledgedAt:
              type: string
              format: date-time
    
    ClearingCompletedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - clearingReference
            - transactionId
            - clearingStatus
          properties:
            clearingReference:
              type: string
            transactionId:
              type: string
            clearingStatus:
              type: string
              enum: [COMPLETED, SETTLED]
            settlementDetails:
              type: object
              properties:
                settlementDate:
                  type: string
                  format: date
                settlementAmount:
                  type: number
                  format: double
            completedAt:
              type: string
              format: date-time
    
    ClearingFailedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - clearingReference
            - transactionId
            - failureReason
          properties:
            clearingReference:
              type: string
            transactionId:
              type: string
            failureReason:
              type: string
            errorCode:
              type: string
            failedAt:
              type: string
              format: date-time
    
    PaymentCompletedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - paymentId
            - transactionId
            - finalStatus
          properties:
            paymentId:
              type: string
            transactionId:
              type: string
            finalStatus:
              type: string
              enum: [COMPLETED, SETTLED]
            completedAt:
              type: string
              format: date-time
    
    PaymentFailedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - paymentId
            - failureStage
            - failureReason
          properties:
            paymentId:
              type: string
            transactionId:
              type: string
            failureStage:
              type: string
              enum: [VALIDATION, RESERVATION, ROUTING, PROCESSING, CLEARING]
            failureReason:
              type: string
            errorCode:
              type: string
            failedAt:
              type: string
              format: date-time
    
    SettlementBatchCreatedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - batchId
            - batchDate
            - clearingSystem
          properties:
            batchId:
              type: string
            batchDate:
              type: string
              format: date
            clearingSystem:
              type: string
            transactionCount:
              type: integer
            totalAmount:
              type: number
              format: double
            createdAt:
              type: string
              format: date-time
    
    SettlementCompletedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - batchId
            - settlementStatus
          properties:
            batchId:
              type: string
            settlementStatus:
              type: string
              enum: [COMPLETED, PARTIALLY_SETTLED]
            settledCount:
              type: integer
            failedCount:
              type: integer
            totalSettledAmount:
              type: number
              format: double
            completedAt:
              type: string
              format: date-time
    
    SagaStartedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - sagaId
            - sagaType
          properties:
            sagaId:
              type: string
            sagaType:
              type: string
              enum: [PAYMENT_SAGA, SETTLEMENT_SAGA, RECONCILIATION_SAGA]
            sagaPayload:
              type: object
            startedAt:
              type: string
              format: date-time
    
    SagaStepCompletedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - sagaId
            - stepName
            - stepStatus
          properties:
            sagaId:
              type: string
            stepName:
              type: string
            stepStatus:
              type: string
              enum: [COMPLETED, FAILED]
            stepResult:
              type: object
            completedAt:
              type: string
              format: date-time
    
    SagaCompensatingPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - sagaId
            - compensationReason
          properties:
            sagaId:
              type: string
            compensationReason:
              type: string
            failedStep:
              type: string
            compensationStartedAt:
              type: string
              format: date-time
    
    SagaCompletedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - sagaId
            - finalStatus
          properties:
            sagaId:
              type: string
            finalStatus:
              type: string
              enum: [COMPLETED, COMPENSATED, FAILED]
            completedSteps:
              type: array
              items:
                type: string
            completedAt:
              type: string
              format: date-time
    
    LimitConsumedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - customerId
            - paymentId
            - amount
            - paymentType
          properties:
            customerId:
              type: string
            paymentId:
              type: string
            amount:
              type: number
              format: double
            paymentType:
              type: string
              enum: [EFT, RTC, RTGS, DEBIT_ORDER, CARD, WALLET]
            reservationId:
              type: string
            dailyUsedBefore:
              type: number
              format: double
            dailyUsedAfter:
              type: number
              format: double
            monthlyUsedBefore:
              type: number
              format: double
            monthlyUsedAfter:
              type: number
              format: double
            dailyAvailable:
              type: number
              format: double
            monthlyAvailable:
              type: number
              format: double
            consumedAt:
              type: string
              format: date-time
    
    LimitReleasedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - customerId
            - paymentId
            - amount
            - reservationId
          properties:
            customerId:
              type: string
            paymentId:
              type: string
            amount:
              type: number
              format: double
            paymentType:
              type: string
              enum: [EFT, RTC, RTGS, DEBIT_ORDER, CARD, WALLET]
            reservationId:
              type: string
            releaseReason:
              type: string
              enum: [PAYMENT_FAILED, PAYMENT_CANCELLED, VALIDATION_FAILED, TIMEOUT]
            releasedAt:
              type: string
              format: date-time
    
    NotificationSentPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - notificationId
            - recipientId
            - channel
            - status
          properties:
            notificationId:
              type: string
            recipientId:
              type: string
            channel:
              type: string
              enum: [SMS, EMAIL, PUSH, WEBHOOK]
            status:
              type: string
              enum: [SENT, DELIVERED]
            sentAt:
              type: string
              format: date-time
            deliveredAt:
              type: string
              format: date-time
    
    NotificationFailedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - notificationId
            - recipientId
            - channel
            - failureReason
          properties:
            notificationId:
              type: string
            recipientId:
              type: string
            channel:
              type: string
              enum: [SMS, EMAIL, PUSH, WEBHOOK]
            failureReason:
              type: string
            errorCode:
              type: string
            failedAt:
              type: string
              format: date-time
    
    AuditEventLoggedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - auditId
            - eventType
            - eventCategory
          properties:
            auditId:
              type: string
            eventType:
              type: string
            eventCategory:
              type: string
              enum: [SECURITY, BUSINESS, TECHNICAL]
            userId:
              type: string
            sessionId:
              type: string
            service:
              type: string
            action:
              type: string
            resource:
              type: string
            loggedAt:
              type: string
              format: date-time
    
    ReconciliationStartedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - reconciliationId
            - runDate
            - clearingSystem
          properties:
            reconciliationId:
              type: string
            runDate:
              type: string
              format: date
            clearingSystem:
              type: string
            startedAt:
              type: string
              format: date-time
    
    ReconciliationCompletedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - reconciliationId
            - status
          properties:
            reconciliationId:
              type: string
            status:
              type: string
              enum: [COMPLETED, FAILED, PARTIALLY_COMPLETED]
            totalTransactions:
              type: integer
            matchedCount:
              type: integer
            unmatchedCount:
              type: integer
            completedAt:
              type: string
              format: date-time
    
    ReconciliationExceptionPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - reconciliationId
            - exceptionType
            - exceptionReason
          properties:
            reconciliationId:
              type: string
            transactionId:
              type: string
            clearingReference:
              type: string
            exceptionType:
              type: string
              enum: [MISSING_INTERNAL, MISSING_EXTERNAL, AMOUNT_MISMATCH, DUPLICATE, STATUS_CONFLICT]
            exceptionReason:
              type: string
            severity:
              type: string
              enum: [LOW, MEDIUM, HIGH, CRITICAL]
            occurredAt:
              type: string
              format: date-time
    
    TenantCreatedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - tenantId
            - tenantName
            - tenantType
          properties:
            tenantId:
              type: string
            tenantName:
              type: string
            tenantType:
              type: string
              enum: [BANK, FINANCIAL_INSTITUTION, FINTECH, CORPORATE]
            createdBy:
              type: string
            createdAt:
              type: string
              format: date-time
    
    TenantUpdatedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - tenantId
            - updatedFields
          properties:
            tenantId:
              type: string
            updatedFields:
              type: array
              items:
                type: string
            updatedBy:
              type: string
            updatedAt:
              type: string
              format: date-time
    
    UserAuthenticatedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - userId
            - username
            - authenticationMethod
          properties:
            userId:
              type: string
            username:
              type: string
            authenticationMethod:
              type: string
              enum: [PASSWORD, MFA, SSO, API_KEY]
            ipAddress:
              type: string
            userAgent:
              type: string
            authenticatedAt:
              type: string
              format: date-time
    
    UserAuthorizationFailedPayload:
      allOf:
        - $ref: '#/components/schemas/EventMetadata'
        - type: object
          required:
            - userId
            - username
            - failureReason
          properties:
            userId:
              type: string
            username:
              type: string
            failureReason:
              type: string
            resource:
              type: string
            action:
              type: string
            ipAddress:
              type: string
            failedAt:
              type: string
              format: date-time
